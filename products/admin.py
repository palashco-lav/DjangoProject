# products/admin.py
from django.contrib import admin
from django.utils.html import format_html
from .models import Product


@admin.register(Product)
class ProductAdmin(admin.ModelAdmin):
    # –ü–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤
    list_display = [
        'id',
        'name',
        'category',
        'price',
        'in_stock',
        'created_at',
        'actions'
    ]

    # –ü–æ–ª—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    list_filter = ['category', 'in_stock', 'created_at']

    # –ü–æ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞
    search_fields = ['name', 'description', 'category']

    # –ü–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä—è–º–æ –∏–∑ —Å–ø–∏—Å–∫–∞
    list_editable = ['price', 'in_stock']

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    list_per_page = 20

    # –ü–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    ordering = ['-created_at']

    # –ü–æ–ª—è –≤ —Ñ–æ—Ä–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('name', 'description', 'category')
        }),
        ('–¶–µ–Ω–∞ –∏ –Ω–∞–ª–∏—á–∏–µ', {
            'fields': ('price', 'in_stock')
        }),
        ('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at',),
            'classes': ('collapse',)
        })
    )

    # –¢–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è –ø–æ–ª—è
    readonly_fields = ['created_at']

    def actions(self, obj):
        """–ö–∞—Å—Ç–æ–º–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏"""
        return format_html(
            '<a href="/admin/products/product/{}/change/">‚úèÔ∏è</a> '
            '<a href="/admin/products/product/{}/delete/">üóëÔ∏è</a>',
            obj.id, obj.id
        )

    actions.short_description = '–î–µ–π—Å—Ç–≤–∏—è'

    # –ö–∞—Å—Ç–æ–º–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

    @admin.action(description="–ü–æ–º–µ—Ç–∏—Ç—å –∫–∞–∫ –≤ –Ω–∞–ª–∏—á–∏–∏")
    def make_in_stock(self, request, queryset):
        queryset.update(in_stock=True)
        self.message_user(request, "–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –ø–æ–º–µ—á–µ–Ω—ã –∫–∞–∫ –≤ –Ω–∞–ª–∏—á–∏–∏")

    @admin.action(description="–ü–æ–º–µ—Ç–∏—Ç—å –∫–∞–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ")
    def make_out_of_stock(self, request, queryset):
        queryset.update(in_stock=False)
        self.message_user(request, "–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –ø–æ–º–µ—á–µ–Ω—ã –∫–∞–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ")

    @admin.action(description="–£–≤–µ–ª–∏—á–∏—Ç—å —Ü–µ–Ω—É –Ω–∞ 10%")
    def increase_price_10_percent(self, request, queryset):
        for product in queryset:
            product.price *= 1.1
            product.save()
        self.message_user(request, "–¶–µ–Ω—ã —É–≤–µ–ª–∏—á–µ–Ω—ã –Ω–∞ 10%")

    actions = [make_in_stock, make_out_of_stock, increase_price_10_percent]